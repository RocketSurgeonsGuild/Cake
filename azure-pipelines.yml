variables:
  Configuration: Release
  Verbosity: Normal
  Coverage: "$(Agent.BuildDirectory)/c"
  VstsCoverage: "$(Coverage)"
  Artifacts: $(Build.ArtifactStagingDirectory)
  VstsArtifacts: "$(Artifacts)"
  # system.enableAccessToken: 'true'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
  DotNetVersion: "2.1.403"
  NuGetVersion: "4.7.1"
  CakeVersion: "0.30.0"
jobs:
  - job: GitVersion
    pool:
      vmImage: "VS2017-Win2016"
    steps:
      - template: .pipelines/gitversion-store.yml
        parameters:
          NuGetVersion: "$(NuGetVersion)"

  - job: macOS
    dependsOn: GitVersion
    pool:
      vmImage: "macOS-10.13"
    steps:
      - template: .pipelines/gitversion-restore.yml
      - template: .pipelines/dotnet-core.yml
        parameters:
          CakeVersion: "$(CakeVersion)"
          DotNetVersion: "$(DotNetVersion)"
      - template: .pipelines/azure-build.yml
        parameters:
          Configuration: "$(Configuration)"
          Verbosity: "$(Verbosity)"

  - job: Linux
    dependsOn: GitVersion
    pool:
      vmImage: "Ubuntu-16.04"
    steps:
      - template: .pipelines/gitversion-restore.yml
      - template: .pipelines/dotnet-core.yml
        parameters:
          CakeVersion: "$(CakeVersion)"
          DotNetVersion: "$(DotNetVersion)"
      - template: .pipelines/azure-build.yml
        parameters:
          Configuration: "$(Configuration)"
          Verbosity: "$(Verbosity)"

  - job: Windows
    pool:
      vmImage: "VS2017-Win2016"
    steps:
      - template: .pipelines/gitversion-restore.yml
      - template: .pipelines/dotnet-core.yml
        parameters:
          CakeVersion: "$(CakeVersion)"
          DotNetVersion: "$(DotNetVersion)"
      - task: NuGetToolInstaller@0
        displayName: "Get NuGet"
        inputs:
          versionSpec: $(NuGetVersion)
      - template: .pipelines/azure-build.yml
        parameters:
          Configuration: "$(Configuration)"
          Verbosity: "$(Verbosity)"
      - task: NuGetCommand@2
        displayName: 'Push NuGet packages to myget.org'
        inputs:
          command: push
          nuGetFeedType: external
          publishFeedCredentials: myget.org
          verbosityPush: Normal
        condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
      - task: NuGetCommand@2
        displayName: 'Push NuGet packages to nuget.org'
        inputs:
          command: push
          nuGetFeedType: external
          publishFeedCredentials: nuget.org
          verbosityPush: Normal
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
